<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infra on JEONG LYNN의 안드로이드</title>
    <link>https://jjjlyn.netlify.app/categories/infra/</link>
    <description>Recent content in Infra on JEONG LYNN의 안드로이드</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>prize1142@gmail.com (정린(JEONG LYNN))</managingEditor>
    <webMaster>prize1142@gmail.com (정린(JEONG LYNN))</webMaster>
    <lastBuildDate>Wed, 16 Nov 2022 13:39:56 +0900</lastBuildDate><atom:link href="https://jjjlyn.netlify.app/categories/infra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>도커 네트워크 구성</title>
      <link>https://jjjlyn.netlify.app/posts/how-docker-network-works/</link>
      <pubDate>Wed, 16 Nov 2022 13:39:56 +0900</pubDate>
      <author>prize1142@gmail.com (정린(JEONG LYNN))</author>
      <guid>https://jjjlyn.netlify.app/posts/how-docker-network-works/</guid>
      <description>도커 네트워크 구성 외부에서 임의의 URL로 요청이 들어왔을 때, 지정한 로컬호스트 포트로 포트포워딩 되도록 Nginx에 사전 설정을 했습니다. 그리고 도커 컨테이너 실행 시 docker run -p {호스트 포트번호}:{도커 포트번호} 파라미터를 주어 특정 호스트 포트번호로 들어올 때 해당 도커 컨테이너의 포트번호로 전달되도록 했습니다.
궁금했던 점 1: 도커가 설치된 호스트 서버의 라우팅 테이블을 살펴봐도 도커 포트번호에 대한 명시가 없고, 단지 호스트 서버의 특정 포트로 들어온 요청은 도커 컨테이너 IP(172.17.xx.xx/16)로 넘기라는 명령만 있는데, 도커 컨테이너의 포트는 왜 필요하다는걸까?</description>
    </item>
    
    <item>
      <title>서버 어플리케이션 CI/CD 파이프라인 구축</title>
      <link>https://jjjlyn.netlify.app/posts/server-app-ci-cd/</link>
      <pubDate>Wed, 16 Nov 2022 13:39:56 +0900</pubDate>
      <author>prize1142@gmail.com (정린(JEONG LYNN))</author>
      <guid>https://jjjlyn.netlify.app/posts/server-app-ci-cd/</guid>
      <description>지속적 통합 (CI) 서버 어플리케이션에 Dockerfile을 생성합니다. Dockerfile이란 docker가 기본적으로 제공하는 이미지를 이용하여 커스텀 이미지를 생성할 수 있는 스크립트 파일 입니다.
먼저 전역변수를 설정합니다.
ARG port=3000 ARG binary=product-api 빌드 환경을 구축합니다.
알파인 리눅스(alpine linux)는 도커 컨테이너 OS로 많이 사용되는 초경량화된 리눅스 배포판 입니다.
FROM golang:1.16.2-alpine3.13 as builder Multi-Stage 도커파일에서 binary ARG를 공유합니다.
ARG binary 관리자를 지정합니다.
MAINTAINER jjjlyn &amp;lt;prize1142@gmail.com&amp;gt; 알파인 리눅스에서 패키지 관리자 명령어는 apk입니다.
RUN apk update &amp;amp;&amp;amp; apk upgrade &amp;amp;&amp;amp; \ apk --update add git make gcc g++ cd app/과 동일합니다.</description>
    </item>
    
    <item>
      <title>스타트업 앱 서비스 배포 경험기</title>
      <link>https://jjjlyn.netlify.app/posts/overall-architecture/</link>
      <pubDate>Wed, 16 Nov 2022 13:39:56 +0900</pubDate>
      <author>prize1142@gmail.com (정린(JEONG LYNN))</author>
      <guid>https://jjjlyn.netlify.app/posts/overall-architecture/</guid>
      <description>들어가기에 앞서 본 문서에서 출처를 명시하지 않은 첨부 이미지는 작성자가 직접 제작한 작업물입니다. 2차 가공, 공유 등을 하여도 문제되지 않으나 내용에 오류가 있을 수 있으므로 권장하지 않습니다. 잘못된 내용으로 발생하는 피해에 대해서는 책임을 지지 않습니다.
본래 안드로이드 개발자로 합류하였으나 팀 내부 사정으로 인하여 서비스 배포까지 하게 된 경험을 공유합니다. 초기 스타트업으로 신규 서비스 개발부터 배포까지의 전 과정을 아울러야 했습니다. 클라우드 서비스 + 데브옵스 + 도커를 이용하여 개발 환경을 구축하였습니다.
서버 구성 운영 환경 원래 운영 환경은 Azure, 개발은 AWS로 구축되었으나 Azure 구독료가 부담스러운 관계로 2022년 9월 13일 기준 운영까지 AWS로 주요 리소스를 이전하였습니다.</description>
    </item>
    
    <item>
      <title>인프라 회고록 (목차)</title>
      <link>https://jjjlyn.netlify.app/posts/infra-docs/</link>
      <pubDate>Tue, 15 Nov 2022 13:39:56 +0900</pubDate>
      <author>prize1142@gmail.com (정린(JEONG LYNN))</author>
      <guid>https://jjjlyn.netlify.app/posts/infra-docs/</guid>
      <description>인프라 환경 구축 과정에서 발생한 문제와 이를 해결하기 위한 방법을 공유하고자 합니다.
이 밖에도 특정 기술 혹은 개념에 관하여 개인적으로 이해한 내용을 정리한 자료가 포함되어 있습니다.
스타트업 앱 서비스 배포 경험기 안드로이드 어플리케이션 CI/CD 파이프라인 구축 서버 어플리케이션 CI/CD 파이프라인 구축 </description>
    </item>
    
  </channel>
</rss>
